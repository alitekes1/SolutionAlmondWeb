@model AlmondWeb.BusinessLayer.ViewModels.UserQueAnswListModel

@using AlmondWeb.BusinessLayer.RepositoryPattern
@{
    Repository<AlmondWeb.Entities.ListTable> repo_list = new Repository<AlmondWeb.Entities.ListTable>();
    SelectList listItems2 = new SelectList(repo_list.List(), "id", "listName");//value ve text in ne olduğunu belirliyoruz.
    ViewData["list"] = listItems2;//liste listesini viewdata ile gönderiyoruz.

    string placeholder1 = "null";
    string placeholder2 = "null";
    string actionLink = "index";
    string isAddDataPage = ViewData["addDataPage"] as string;
    if (isAddDataPage == "1")
    {
        placeholder1 = ViewData["addDataQuestionPlacholder"] as string;
        placeholder2 = ViewData["addDataAnswerPlacholder"] as string;
        actionLink = ViewData["AddData"] as string;
    }
    else
    {
        placeholder1 = ViewData["updateQuestionPlacholder"] as string;
        placeholder2 = ViewData["updateAnswerPlacholder"] as string;
        actionLink = ViewData["UpdateData"] as string;
    }
}

@using (Html.BeginForm(actionLink, "Home", "POST"))
{
    <div>
        @Html.ValidationSummary(false)
    </div>

    <div class="row-sm-3 form-group shadow-textarea textareas">
        @Html.TextAreaFor(x => x.question, new { @class = "form-control z-depth-1 border border-dark-subtle", placeholder = placeholder1, autofocus = "autofocus", title = "Soru", id = "exampleFormControlTextarea17" })
        @*<p class="text-danger text-sm-start" style="font-size: 13px;">@Html.ValidationMessageFor(x => x.question)</p>*@
        <br>
    </div>

    <div class="row-sm-3 form-group shadow-textarea textareas ">
        @Html.TextAreaFor(x => x.answer, new { @class = "form-control z-depth-1 border border-dark-subtle", placeholder = placeholder2, autofocus = "autofocus", title = "Cevap", id = "exampleFormControlTextarea16" })
        @*@Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })*@
        <br>
    </div>

    <div class="row-sm-3">
        <div class="col-sm-3 " style=" display: inline-block;width:80%">
            @Html.DropDownListFor(x => x.listValue, ViewData["list"] as SelectList, "Liste Seçiniz", new { @class = "form-select bg-white ", id = "liste-dropdown" })
        </div>
    </div>
    @Html.HiddenFor(x => x., new { @id = "updatadatam" })
    @Html.HiddenFor(x => x.updateDataId, new { @id = "updatadatam" })
    @Html.HiddenFor(x => x.updateDataId, new { @id = "updatadatam" })

    if (isAddDataPage != "1")
    {
        <div>
            @Html.HiddenFor(x => x.updateDataId, new { @id = "updatadatam" })
        </div>
    }
    <div class="row-sm-3 mt-1">
        <button type="submit" id="submitbtn" class="btn btn-success verieklebtn">Kaydet</button>
    </div>
}
